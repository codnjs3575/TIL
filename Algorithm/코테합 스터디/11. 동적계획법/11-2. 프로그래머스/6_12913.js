// 문제: 땅따먹기
// 땅따먹기 게임의 땅은 N x 4 크기이고, 각 칸에는 점수가 쓰여 있다.
// 1. 같은 열을 연속해서 밟을 수 없다.
// 2. 마지막 행까지 내려왔을 때, 얻을 수 있는 점수의 최댓값을 구하라.

// 동적 계획법, 하향식 풀이
// 중복 부분 문제 (= 메모이제이션) : land에 최댓값을 더하며 값을 갱신하므로, 같은 값을 여러 번 계산하지 않음
// 최적 부분 구조 (= 부분 문제 풀이) : 각 행에서 해당 열마다 최댓값을 구하는 것으로 부분문제를 나눔

function solution(land) {
  land.map((rows, i) => {
    rows.map((_, j) => {
      // 현재 행에 이전 행에서 가장 큰 값을 더해줌
      // j : 0, 1, 2, 3
      land[i][j] += Math.max(
        land[i - 1][(j + 1) % 4],
        land[i - 1][(j + 2) % 4],
        land[i - 1][(j + 3) % 4]
      )
    })
  })
  return Math.max(...land[land.length - 1])
}

// prettier-ignore
solution([[1,2,3,5],[5,6,7,8],[4,3,2,1]]) // 16
